{"version": 3, "mappings": ";;AAQAA,SAASC,KAAA,CAAM,qBAAN;AACTC,wBAAS,CAAID,KAAA,CAAM,kCAAN,CAAJ;AACTE,WAAW;AACXC,aAAaF;AACbG,WAAW;AAEX,wBAAeH,MAAf,aAAA,QAAA;eACI,CAAM,mCAAAI,OAAA,QAAgDJ,cAAaE,WAA7D,CAAN;IACAG,UAAUN,KAAA,CAAM,iEAAN;IACVO,UAAUC,MAAAC,QAAA,CAAe,CAAf,EAAiB,CAAjB;IACVR,MAAAA,EAAAA,EAAU;IAGV,IAAG,CAAAK,OAAAI,MAAA,EAAA,IAAA,CAAmB,GAAnB,CAAH;QACIJ,UAAU;IADd;QAEK,IAAA,CAAAA,OAAAI,MAAA,EAAA,IAAA,CAAmB,GAAnB,CAAA;YACDJ,UAAU;QADT;YAEA,IAAA,CAAAA,OAAAI,MAAA,EAAA,IAAA,CAAmB,GAAnB,CAAA;gBACDJ,UAAU;YADT;2BAGD,CAAM,uCAAAK,OAAA,WAAuDL,QAAvD,CAAN;YAHC;QAFA;IAFL;IAUA,IAAG,CAAAC,OAAA,IAAA,CAAW,CAAX,CAAH;QACIA,UAAU;IADd;QAEK,IAAA,CAAAA,OAAA,IAAA,CAAW,CAAX,CAAA;YACDA,UAAU;QADT;YAEA,IAAA,CAAAD,OAAA,IAAA,CAAW,CAAX,CAAA;gBACDC,UAAU;YADT;QAFA;IAFL;IAOA,IAAG,CAAAD,OAAA,IAAA,CAAW,MAAX,CAAH;QACI,IAAG,CAAAC,OAAA,IAAA,CAAW,UAAX,CAAH;uBACI,CAAM,gGAAAK,OAAA,QAA6Gb,OAA7G,CAAN;YACAG,QAAAA,EAAAA,EAAY;QAFhB;YAGK,IAAA,CAAAK,OAAA,IAAA,CAAW,OAAX,CAAA;2BACD,CAAM,oGAAAM,OAAA,QAAiHd,OAAjH,CAAN;gBACAK,QAAAA,EAAAA,EAAY;YAFX;2BAID,CAAM,gDAAN;YAJC;QAHL;IADJ;IAUA,IAAG,CAAAE,OAAA,IAAA,CAAW,UAAX,CAAH;QACI,IAAG,CAAAC,OAAA,IAAA,CAAW,OAAX,CAAH;uBACI,CAAM,iGAAAO,OAAA,QAA8Gf,OAA9G,CAAN;YACAG,QAAAA,EAAAA,EAAY;QAFhB;YAGK,IAAA,CAAAK,OAAA,IAAA,CAAW,MAAX,CAAA;2BACD,CAAM,wFAAAQ,OAAA,QAAqGhB,OAArG,CAAN;gBACAK,QAAAA,EAAAA,EAAY;YAFX;2BAID,CAAM,kDAAN;YAJC;QAHL;IADJ;IAUA,IAAG,CAAAE,OAAA,IAAA,CAAW,OAAX,CAAH;QACI,IAAG,CAAAA,OAAA,IAAA,CAAW,MAAX,CAAH;uBACI,CAAM,qEAAAU,OAAA,QAAkFjB,OAAlF,CAAN;YACAG,QAAAA,EAAAA,EAAY;QAFhB;QAGA,IAAG,CAAAK,OAAA,IAAA,CAAW,UAAX,CAAH;uBACI,CAAM,wFAAAU,OAAA,QAAqGlB,OAArG,CAAN;YACAK,QAAAA,EAAAA,EAAY;QAFhB;uBAII,CAAM,+CAAN;QAJJ;IAJJ;eAUA,CAAM,sDAAAc,OAAA,QAAmEnB,eAAcG,iBAAgBE,SAAjG,CAAN;AAtDJ;AAwDA,IAAG,CAAAF,QAAA,EAAA,CAAWE,QAAX,CAAH;eACI,CAAM,mFAAAe,OAAA,QAAgGpB,eAAkBG,iBAAJ,WAAyBE,iBAAJ,GAAnI,CAAN;AADJ;IAEK,IAAA,CAAAF,QAAA,IAAA,CAAYE,QAAZ,CAAA;mBACD,CAAM,6DAAAgB,OAAA,QAA0ErB,eAAkBK,iBAAJ,GAAxF,CAAN;IADC;mBAGD,CAAM,gFAAAiB,OAAA,QAA6FtB,eAAkBG,iBAAJ,WAAyBE,iBAAJ,GAAhI,CAAN;IAHC;AAFL", "sources": ["rps.py"], "names": ["p1name", "input", "rounds", "p1points", "roundCount", "p2points", "\"\\n{rn} rounds left out of {rm}.\\n\".format", "player1", "player2", "random", "random.randint", "player1.lower", "\"Error: '{input}' is an invalid input.\".format", "\"\\n{p1} destroyed Player 2's Scissors with a Rock, leading to their victory. +1 point for {p1}.\".format", "\"\\nPlayer 2 wrapped their Paper around {p1}'s Rock, making the Rock useless. +1 point for Player 2.\".format", "\"\\n{p1} used their scissors, and cut Player 2's Paper into a thousand pieces. +1 point for {p1}.\".format", "\"\\n{p1}'s Scissors were blunted then crushed by Player 2's Rock. +1 point for Player 2.\".format", "\"\\nPlayer 2's Rock was enveloped by {p1}'s Paper. +1 point for {p1}.\".format", "\"\\n{p1}'s Paper was slashed and shredded by Player 2's Scissors. +1 point for Player 2.\".format", "\"{p1} has {p1p} points and Player 2 has {p2p} points.\".format", "\"\\n{p1} is the winner with {p1p} points, beating Player 2 who gained {p2p} points.\".format", "\"\\nWe have a draw. Both {p1} and Player 2 have {p2p} points.\".format", "\"\\n{p1} loses with {p1p} points, falling to Player 2 who won with {p2p} points.\".format"], "sourcesContent": ["import random\n\n## 1 = rock\n## 2 = paper\n## 3 = scissors\n\n## rock beats scissors, paper beats rock, scissors beats paper\n\np1name = input(\"What is your name? \")\nrounds = int(input(\"How many rounds will be played? \"))\np1points = 0\nroundCount = rounds\np2points = 0\n\nfor i in range(rounds):\n    print(\"\\n{rn} rounds left out of {rm}.\\n\".format(rn = rounds, rm = roundCount))\n    player1 = input(\"What do you want to play: [1] Rock, [2] Paper or [3] Scissors? \")\n    player2 = random.randint(1,3)\n    rounds -= 1\n\n    ## Player1\n    if player1.lower() == '1':\n        player1 = \"Rock\"\n    elif player1.lower() == '2':\n        player1 = \"Paper\"\n    elif player1.lower() == '3':\n        player1 = \"Scissors\"\n    else:\n        print(\"Error: '{input}' is an invalid input.\".format(input = player1))\n\n    ## Player2\n    if player2 == 1:\n        player2 = \"Rock\"\n    elif player2 == 2:\n        player2 = \"Paper\"\n    elif player1 == 3:\n        player2 = \"Scissors\"\n\n    if player1 == \"Rock\":\n        if player2 == \"Scissors\":\n            print(\"\\n{p1} destroyed Player 2's Scissors with a Rock, leading to their victory. +1 point for {p1}.\".format(p1 = p1name))\n            p1points += 1\n        elif player2 == \"Paper\":\n            print(\"\\nPlayer 2 wrapped their Paper around {p1}'s Rock, making the Rock useless. +1 point for Player 2.\".format(p1 = p1name))\n            p2points += 1\n        else:\n            print(\"\\nBoth players played Rock. No points given.\\n\")\n\n    if player1 == \"Scissors\":\n        if player2 == \"Paper\":\n            print(\"\\n{p1} used their scissors, and cut Player 2's Paper into a thousand pieces. +1 point for {p1}.\".format(p1 = p1name))\n            p1points += 1\n        elif player2 == \"Rock\":\n            print(\"\\n{p1}'s Scissors were blunted then crushed by Player 2's Rock. +1 point for Player 2.\".format(p1 = p1name))\n            p2points += 1\n        else:\n            print(\"\\nBoth players played Scissors. No points given.\")\n\n    if player1 == \"Paper\":\n        if player1 == \"Rock\":\n            print(\"\\nPlayer 2's Rock was enveloped by {p1}'s Paper. +1 point for {p1}.\".format(p1 = p1name))\n            p1points += 1\n        if player2 == \"Scissors\":\n            print(\"\\n{p1}'s Paper was slashed and shredded by Player 2's Scissors. +1 point for Player 2.\".format(p1 = p1name))\n            p2points += 1\n        else:\n            print(\"\\nBoth players played Paper. No points given.\")\n\n    print(\"{p1} has {p1p} points and Player 2 has {p2p} points.\".format(p1 = p1name, p1p = p1points, p2p = p2points))\n\nif p1points > p2points:\n    print(\"\\n{p1} is the winner with {p1p} points, beating Player 2 who gained {p2p} points.\".format(p1 = p1name, p1p = str(p1points), p2p = str(p2points)))\nelif p1points == p2points:\n    print(\"\\nWe have a draw. Both {p1} and Player 2 have {p2p} points.\".format(p1 = p1name, p2p = str(p2points)))\nelse:\n    print(\"\\n{p1} loses with {p1p} points, falling to Player 2 who won with {p2p} points.\".format(p1 = p1name, p1p = str(p1points), p2p = str(p2points)))"]}